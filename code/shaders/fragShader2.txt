#version 330
	in vec4 vert_Normal;
	out vec4 out_Color;
	in vec4 vert_pos;
	uniform mat4 mvpMat;
	uniform mat4 mv_Mat;
	uniform vec3 lPos;
	uniform vec4 color;
	uniform vec3 lightColor;
	uniform vec3 cameraP;
	uniform float ambientPower;
	uniform float diffusePower;
	uniform float specularPower;

	void main() {
	vec4 lightPos2 = mv_Mat * vec4( lPos, 0.0 );
	vec3 ambient = ambientPower * lightColor;

	vec4 lightDir = vec4(normalize(lightPos2.xyz - vert_pos.xyz), 0.0);
	float diff = max(dot(vert_Normal, lightDir), 0.0);
	if(diff < 0.2)
		diff = 0;
	else if(diff >=0.2 && diff <= 0.4)
		diff = 0.2;
	else if (diff >= 0.4 && diff <= 0.5 )
		diff = 0.4;
	else if (diff >= 0.5)
		diff = 1;
	vec3 diffuse = diff * lightColor * diffusePower;

	vec4 v = vec4(normalize(cameraP - vert_pos.xyz), 0.0);
	vec4 r = reflect(lightDir, vert_Normal);
	float spec = pow(max(dot(v,r), 0.0), 32);
	if(spec > 0.5)
		spec = 1;
	else if(spec <= 0.5)
		spec = 0;
	vec3 specular = 20 * spec * lightColor * specularPower;

	vec3 result = (ambient + diffuse + specular) * color.xyz;

		out_Color = vec4(result, 1.0 );
	}
